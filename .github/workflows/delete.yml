name: Delete merged branch

on:
  pull_request:
    types:
      - closed
    branches: 
      - develop
      - feature*
      - hotfix*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Run a multi-line script
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        URI=https://api.github.com
        API_VERSION=v3
        API_HEADER="Accept: application/vnd.github.${API_VERSION}+json"
        AUTH_HEADER="Authorization: token ${GITHUB_TOKEN}"
        
        main() {
          # Get action type and if branch was merged
          action=$(jq --raw-output .action "$GITHUB_EVENT_PATH")
          merged=$(jq --raw-output .pull_request.merged "$GITHUB_EVENT_PATH")

          echo "DEBUG -> action: $action merged: $merged"

          # We only care about the closed event and if it was merged.
          if [[ "$action" == "closed" ]] && [[ "$merged" == "true" ]]; then
              # If so, delete the branch.
              ref=$(jq --raw-output .pull_request.head.ref "$GITHUB_EVENT_PATH")
              owner=$(jq --raw-output .pull_request.head.repo.owner.login "$GITHUB_EVENT_PATH")
              repo=$(jq --raw-output .pull_request.head.repo.name "$GITHUB_EVENT_PATH")
              
              # Get default branch
              default_branch=$(
                curl -XGET -sSL \
                  -H "${AUTH_HEADER}" \
                  -H "${API_HEADER}" \
                  "${URI}/repos/${owner}/${repo}" | jq .default_branch
              )
              
              # Never delete the default branch.
              if [[ "$ref" == "$default_branch" ]]; then
                echo "Will not delete default branch (${default_branch}) for ${owner}/${repo}, exiting."
                exit 0
              fi

              echo "Deleting branch ref $ref for owner ${owner}/${repo}..."
              
              curl -XDELETE -sSL \
                -H "${AUTH_HEADER}" \
                -H "${API_HEADER}" \
                "${URI}/repos/${owner}/${repo}/git/refs/heads/${ref}"

              echo "Branch delete success!"
          fi
        }

        main "$@"
